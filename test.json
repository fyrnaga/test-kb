{"keywords":["nginx","http","web","www","reverse proxy"],"maintainers":[{"name":"Bitnami","email":"containers@bitnami.com"}],"links":[{"url":"https://github.com/bitnami/bitnami-docker-nginx","name":"source"},{"url":"https://www.nginx.org","name":"source"}],"homeUrl":"https://github.com/bitnami/charts/tree/master/bitnami/nginx","availableVersions":[{"version":"9.9.3","createdAt":0},{"version":"9.9.2","createdAt":0},{"version":"9.9.1","createdAt":0},{"version":"9.9.0","createdAt":0},{"version":"9.8.0","createdAt":0},{"version":"9.7.9","createdAt":0},{"version":"9.7.8","createdAt":0},{"version":"9.7.6","createdAt":0},{"version":"9.7.5","createdAt":0},{"version":"9.7.4","createdAt":0},{"version":"9.7.3","createdAt":0},{"version":"9.7.2","createdAt":0},{"version":"9.7.1","createdAt":0},{"version":"9.7.0","createdAt":0},{"version":"9.6.2","createdAt":0},{"version":"9.6.1","createdAt":0},{"version":"9.6.0","createdAt":0},{"version":"9.5.18","createdAt":0},{"version":"9.5.17","createdAt":0},{"version":"9.5.16","createdAt":0},{"version":"9.5.15","createdAt":0},{"version":"9.5.14","createdAt":0},{"version":"9.5.13","createdAt":0},{"version":"9.5.12","createdAt":0},{"version":"9.5.11","createdAt":0},{"version":"9.5.10","createdAt":0},{"version":"9.5.9","createdAt":0},{"version":"9.5.8","createdAt":0},{"version":"9.5.7","createdAt":0},{"version":"9.5.6","createdAt":0},{"version":"9.5.5","createdAt":0},{"version":"9.5.4","createdAt":0},{"version":"9.5.3","createdAt":0},{"version":"9.5.2","createdAt":0},{"version":"9.5.1","createdAt":0},{"version":"9.5.0","createdAt":0},{"version":"9.4.3","createdAt":0},{"version":"9.4.2","createdAt":0},{"version":"9.4.1","createdAt":0},{"version":"9.4.0","createdAt":0},{"version":"9.3.8","createdAt":0},{"version":"9.3.7","createdAt":0},{"version":"9.3.6","createdAt":0},{"version":"9.3.5","createdAt":0},{"version":"9.3.4","createdAt":0},{"version":"9.3.3","createdAt":0},{"version":"9.3.0","createdAt":0},{"version":"9.2.0","createdAt":0},{"version":"9.1.0","createdAt":0},{"version":"9.0.0","createdAt":0},{"version":"8.9.1","createdAt":0},{"version":"8.9.0","createdAt":0},{"version":"8.8.5","createdAt":0},{"version":"8.8.4","createdAt":0},{"version":"8.8.3","createdAt":0},{"version":"8.8.2","createdAt":0},{"version":"8.8.1","createdAt":0},{"version":"8.8.0","createdAt":0},{"version":"8.7.1","createdAt":0},{"version":"8.7.0","createdAt":0},{"version":"8.6.0","createdAt":0},{"version":"8.5.5","createdAt":0},{"version":"8.5.4","createdAt":0},{"version":"8.5.3","createdAt":0},{"version":"8.5.2","createdAt":0},{"version":"8.5.1","createdAt":0},{"version":"8.5.0","createdAt":0},{"version":"8.4.3","createdAt":0},{"version":"8.4.1","createdAt":0},{"version":"8.4.0","createdAt":0},{"version":"8.3.0","createdAt":0},{"version":"8.2.4","createdAt":0},{"version":"8.2.3","createdAt":0},{"version":"8.2.2","createdAt":0},{"version":"8.2.1","createdAt":0},{"version":"8.2.0","createdAt":0},{"version":"8.1.2","createdAt":0},{"version":"8.1.1","createdAt":0},{"version":"8.1.0","createdAt":0},{"version":"8.0.0","createdAt":0},{"version":"7.1.6","createdAt":0},{"version":"7.1.5","createdAt":0},{"version":"7.1.4","createdAt":0},{"version":"7.1.3","createdAt":0},{"version":"7.1.2","createdAt":0},{"version":"7.1.1","createdAt":0},{"version":"7.1.0","createdAt":0},{"version":"7.0.1","createdAt":0},{"version":"7.0.0","createdAt":0},{"version":"6.2.1","createdAt":0},{"version":"6.2.0","createdAt":0},{"version":"6.1.0","createdAt":0},{"version":"6.0.5","createdAt":0},{"version":"6.0.4","createdAt":0},{"version":"6.0.2","createdAt":0},{"version":"6.0.1","createdAt":0},{"version":"6.0.0","createdAt":0},{"version":"5.7.2","createdAt":0},{"version":"5.7.1","createdAt":0},{"version":"5.7.0","createdAt":0},{"version":"5.6.1","createdAt":0},{"version":"5.6.0","createdAt":0},{"version":"5.5.0","createdAt":0},{"version":"5.4.1","createdAt":0},{"version":"5.4.0","createdAt":0},{"version":"5.3.1","createdAt":0},{"version":"5.3.0","createdAt":0},{"version":"5.2.4","createdAt":0},{"version":"5.2.3","createdAt":0},{"version":"5.2.2","createdAt":0},{"version":"5.2.1","createdAt":0},{"version":"5.2.0","createdAt":0},{"version":"5.1.15","createdAt":0},{"version":"5.1.14","createdAt":0},{"version":"5.1.13","createdAt":0},{"version":"5.1.12","createdAt":0},{"version":"5.1.11","createdAt":0},{"version":"5.1.10","createdAt":0},{"version":"5.1.9","createdAt":0},{"version":"5.1.7","createdAt":0},{"version":"5.1.6","createdAt":0},{"version":"5.1.5","createdAt":0},{"version":"5.1.4","createdAt":0},{"version":"5.1.3","createdAt":0},{"version":"5.1.2","createdAt":0},{"version":"5.1.1","createdAt":0},{"version":"5.1.0","createdAt":0},{"version":"5.0.0","createdAt":0},{"version":"4.3.13","createdAt":0},{"version":"4.3.12","createdAt":0},{"version":"4.3.11","createdAt":0},{"version":"4.3.10","createdAt":0},{"version":"4.3.9","createdAt":0},{"version":"4.3.8","createdAt":0},{"version":"4.3.7","createdAt":0},{"version":"4.3.6","createdAt":0},{"version":"4.3.5","createdAt":0},{"version":"4.3.4","createdAt":0},{"version":"4.3.3","createdAt":0},{"version":"4.3.2","createdAt":0},{"version":"4.3.1","createdAt":0},{"version":"4.3.0","createdAt":0},{"version":"4.2.0","createdAt":0},{"version":"4.1.2","createdAt":0},{"version":"4.1.1","createdAt":0},{"version":"4.1.0","createdAt":0},{"version":"4.0.0","createdAt":0},{"version":"3.4.2","createdAt":0},{"version":"3.4.1","createdAt":0},{"version":"3.4.0","createdAt":0},{"version":"3.3.3","createdAt":0},{"version":"3.3.2","createdAt":0},{"version":"3.3.1","createdAt":0},{"version":"3.3.0","createdAt":0},{"version":"3.2.2","createdAt":0},{"version":"3.2.1","createdAt":0},{"version":"3.2.0","createdAt":0},{"version":"3.1.0","createdAt":0},{"version":"3.0.0","createdAt":0},{"version":"2.2.2","createdAt":0},{"version":"2.2.1","createdAt":0},{"version":"2.2.0","createdAt":0},{"version":"2.1.5","createdAt":0},{"version":"2.1.4","createdAt":0},{"version":"2.1.3","createdAt":0},{"version":"2.1.2","createdAt":0},{"version":"2.1.1","createdAt":0},{"version":"2.1.0","createdAt":0},{"version":"2.0.0","createdAt":0},{"version":"1.1.2","createdAt":0},{"version":"1.1.1","createdAt":0},{"version":"1.1.0","createdAt":0},{"version":"1.0.1","createdAt":0},{"version":"1.0.0","createdAt":0},{"version":"0.6.1","createdAt":0},{"version":"0.6.0","createdAt":0},{"version":"0.5.4","createdAt":0},{"version":"0.5.3","createdAt":0},{"version":"0.5.2","createdAt":0},{"version":"0.5.1","createdAt":0},{"version":"0.4.1","createdAt":0},{"version":"0.5.0","createdAt":0},{"version":"0.4.3","createdAt":0},{"version":"0.4.2","createdAt":0},{"version":"0.4.0","createdAt":0}],"readMe":"<!--- app-name: NGINX Open Source -->\n\n# NGINX Open Source packaged by Bitnami\n\nNGINX Open Source is a web server that can be also used as a reverse proxy, load balancer, and HTTP cache. Recommended for high-demanding sites due to its ability to provide faster content. \n\n[Overview of NGINX Open Source](http://nginx.org)\n\nTrademarks: This software listing is packaged by Bitnami. The respective trademarks mentioned in the offering are owned by the respective companies, and use of them does not imply any affiliation or endorsement.\n                           \n## TL;DR\n\n```bash\n$ helm repo add bitnami https://charts.bitnami.com/bitnami\n$ helm install my-release bitnami/nginx\n```\n\n## Introduction\n\nBitnami charts for Helm are carefully engineered, actively maintained and are the quickest and easiest way to deploy containers on a Kubernetes cluster that are ready to handle production workloads.\n\nThis chart bootstraps a [NGINX Open Source](https://github.com/bitnami/bitnami-docker-nginx) deployment on a [Kubernetes](https://kubernetes.io) cluster using the [Helm](https://helm.sh) package manager.\n\nBitnami charts can be used with [Kubeapps](https://kubeapps.com/) for deployment and management of Helm Charts in clusters. This Helm chart has been tested on top of [Bitnami Kubernetes Production Runtime](https://kubeprod.io/) (BKPR). Deploy BKPR to get automated TLS certificates, logging and monitoring for your applications.\n\n## Prerequisites\n\n- Kubernetes 1.19+\n- Helm 3.2.0+\n\n## Installing the Chart\n\nTo install the chart with the release name `my-release`:\n\n```bash\n$ helm repo add bitnami https://charts.bitnami.com/bitnami\n$ helm install my-release bitnami/nginx\n```\n\nThese commands deploy NGINX Open Source on the Kubernetes cluster in the default configuration.\n\n> **Tip**: List all releases using `helm list`\n\n## Uninstalling the Chart\n\nTo uninstall/delete the `my-release` deployment:\n\n```bash\n$ helm delete my-release\n```\n\nThe command removes all the Kubernetes components associated with the chart and deletes the release.\n\n## Parameters\n\n### Global parameters\n\n| Name                      | Description                                     | Value |\n| ------------------------- | ----------------------------------------------- | ----- |\n| `global.imageRegistry`    | Global Docker image registry                    | `\"\"`  |\n| `global.imagePullSecrets` | Global Docker registry secret names as an array | `[]`  |\n\n\n### Common parameters\n\n| Name                | Description                                                                           | Value           |\n| ------------------- | ------------------------------------------------------------------------------------- | --------------- |\n| `nameOverride`      | String to partially override nginx.fullname template (will maintain the release name) | `\"\"`            |\n| `fullnameOverride`  | String to fully override nginx.fullname template                                      | `\"\"`            |\n| `kubeVersion`       | Force target Kubernetes version (using Helm capabilities if not set)                  | `\"\"`            |\n| `clusterDomain`     | Kubernetes Cluster Domain                                                             | `cluster.local` |\n| `extraDeploy`       | Extra objects to deploy (value evaluated as a template)                               | `[]`            |\n| `commonLabels`      | Add labels to all the deployed resources                                              | `{}`            |\n| `commonAnnotations` | Add annotations to all the deployed resources                                         | `{}`            |\n\n\n### NGINX parameters\n\n| Name                 | Description                                                          | Value                 |\n| -------------------- | -------------------------------------------------------------------- | --------------------- |\n| `image.registry`     | NGINX image registry                                                 | `docker.io`           |\n| `image.repository`   | NGINX image repository                                               | `bitnami/nginx`       |\n| `image.tag`          | NGINX image tag (immutable tags are recommended)                     | `1.21.5-debian-10-r3` |\n| `image.pullPolicy`   | NGINX image pull policy                                              | `IfNotPresent`        |\n| `image.pullSecrets`  | Specify docker-registry secret names as an array                     | `[]`                  |\n| `image.debug`        | Set to true if you would like to see extra information on logs       | `false`               |\n| `hostAliases`        | Deployment pod host aliases                                          | `[]`                  |\n| `command`            | Override default container command (useful when using custom images) | `[]`                  |\n| `args`               | Override default container args (useful when using custom images)    | `[]`                  |\n| `extraEnvVars`       | Extra environment variables to be set on NGINX containers            | `[]`                  |\n| `extraEnvVarsCM`     | ConfigMap with extra environment variables                           | `\"\"`                  |\n| `extraEnvVarsSecret` | Secret with extra environment variables                              | `\"\"`                  |\n\n\n### NGINX deployment parameters\n\n| Name                                    | Description                                                                               | Value   |\n| --------------------------------------- | ----------------------------------------------------------------------------------------- | ------- |\n| `replicaCount`                          | Number of NGINX replicas to deploy                                                        | `1`     |\n| `updateStrategy.type`                   | NGINX deployment strategy type                                                            | `\"\"`    |\n| `updateStrategy.rollingUpdate`          | NGINX deployment rolling update configuration parameters                                  | `{}`    |\n| `podLabels`                             | Additional labels for NGINX pods                                                          | `{}`    |\n| `podAnnotations`                        | Annotations for NGINX pods                                                                | `{}`    |\n| `podAffinityPreset`                     | Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`       | `\"\"`    |\n| `podAntiAffinityPreset`                 | Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`  | `soft`  |\n| `nodeAffinityPreset.type`               | Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard` | `\"\"`    |\n| `nodeAffinityPreset.key`                | Node label key to match Ignored if `affinity` is set.                                     | `\"\"`    |\n| `nodeAffinityPreset.values`             | Node label values to match. Ignored if `affinity` is set.                                 | `[]`    |\n| `affinity`                              | Affinity for pod assignment                                                               | `{}`    |\n| `hostNetwork`                           | Specify if host network should be enabled for NGINX pod                                   | `false` |\n| `hostIPC`                               | Specify if host IPC should be enabled for NGINX pod                                       | `false` |\n| `nodeSelector`                          | Node labels for pod assignment. Evaluated as a template.                                  | `{}`    |\n| `tolerations`                           | Tolerations for pod assignment. Evaluated as a template.                                  | `{}`    |\n| `priorityClassName`                     | Priority class name                                                                       | `\"\"`    |\n| `podSecurityContext.enabled`            | Enabled NGINX pods' Security Context                                                      | `false` |\n| `podSecurityContext.fsGroup`            | Set NGINX pod's Security Context fsGroup                                                  | `1001`  |\n| `podSecurityContext.sysctls`            | sysctl settings of the NGINX pods                                                         | `[]`    |\n| `containerSecurityContext.enabled`      | Enabled NGINX containers' Security Context                                                | `false` |\n| `containerSecurityContext.runAsUser`    | Set NGINX container's Security Context runAsUser                                          | `1001`  |\n| `containerSecurityContext.runAsNonRoot` | Set NGINX container's Security Context runAsNonRoot                                       | `true`  |\n| `containerPorts.http`                   | Sets http port inside NGINX container                                                     | `8080`  |\n| `containerPorts.https`                  | Sets https port inside NGINX container                                                    | `\"\"`    |\n| `resources.limits`                      | The resources limits for the NGINX container                                              | `{}`    |\n| `resources.requests`                    | The requested resources for the NGINX container                                           | `{}`    |\n| `livenessProbe.enabled`                 | Enable livenessProbe                                                                      | `true`  |\n| `livenessProbe.initialDelaySeconds`     | Initial delay seconds for livenessProbe                                                   | `30`    |\n| `livenessProbe.periodSeconds`           | Period seconds for livenessProbe                                                          | `10`    |\n| `livenessProbe.timeoutSeconds`          | Timeout seconds for livenessProbe                                                         | `5`     |\n| `livenessProbe.failureThreshold`        | Failure threshold for livenessProbe                                                       | `6`     |\n| `livenessProbe.successThreshold`        | Success threshold for livenessProbe                                                       | `1`     |\n| `readinessProbe.enabled`                | Enable readinessProbe                                                                     | `true`  |\n| `readinessProbe.initialDelaySeconds`    | Initial delay seconds for readinessProbe                                                  | `5`     |\n| `readinessProbe.periodSeconds`          | Period seconds for readinessProbe                                                         | `5`     |\n| `readinessProbe.timeoutSeconds`         | Timeout seconds for readinessProbe                                                        | `3`     |\n| `readinessProbe.failureThreshold`       | Failure threshold for readinessProbe                                                      | `3`     |\n| `readinessProbe.successThreshold`       | Success threshold for readinessProbe                                                      | `1`     |\n| `customLivenessProbe`                   | Override default liveness probe                                                           | `{}`    |\n| `customReadinessProbe`                  | Override default readiness probe                                                          | `{}`    |\n| `autoscaling.enabled`                   | Enable autoscaling for NGINX deployment                                                   | `false` |\n| `autoscaling.minReplicas`               | Minimum number of replicas to scale back                                                  | `\"\"`    |\n| `autoscaling.maxReplicas`               | Maximum number of replicas to scale out                                                   | `\"\"`    |\n| `autoscaling.targetCPU`                 | Target CPU utilization percentage                                                         | `\"\"`    |\n| `autoscaling.targetMemory`              | Target Memory utilization percentage                                                      | `\"\"`    |\n| `extraVolumes`                          | Array to add extra volumes                                                                | `[]`    |\n| `extraVolumeMounts`                     | Array to add extra mount                                                                  | `[]`    |\n| `serviceAccount.create`                 | Enable creation of ServiceAccount for nginx pod                                           | `false` |\n| `serviceAccount.name`                   | The name of the ServiceAccount to use.                                                    | `\"\"`    |\n| `serviceAccount.annotations`            | Annotations for service account. Evaluated as a template.                                 | `{}`    |\n| `serviceAccount.autoMount`              | Auto-mount the service account token in the pod                                           | `false` |\n| `sidecars`                              | Sidecar parameters                                                                        | `[]`    |\n| `sidecarSingleProcessNamespace`         | Enable sharing the process namespace with sidecars                                        | `false` |\n| `initContainers`                        | Extra init containers                                                                     | `[]`    |\n| `pdb.create`                            | Created a PodDisruptionBudget                                                             | `false` |\n| `pdb.minAvailable`                      | Min number of pods that must still be available after the eviction                        | `1`     |\n| `pdb.maxUnavailable`                    | Max number of pods that can be unavailable after the eviction                             | `0`     |\n\n\n### Custom NGINX application parameters\n\n| Name                                       | Description                                                                                       | Value                  |\n| ------------------------------------------ | ------------------------------------------------------------------------------------------------- | ---------------------- |\n| `cloneStaticSiteFromGit.enabled`           | Get the server static content from a Git repository                                               | `false`                |\n| `cloneStaticSiteFromGit.image.registry`    | Git image registry                                                                                | `docker.io`            |\n| `cloneStaticSiteFromGit.image.repository`  | Git image repository                                                                              | `bitnami/git`          |\n| `cloneStaticSiteFromGit.image.tag`         | Git image tag (immutable tags are recommended)                                                    | `2.34.1-debian-10-r33` |\n| `cloneStaticSiteFromGit.image.pullPolicy`  | Git image pull policy                                                                             | `IfNotPresent`         |\n| `cloneStaticSiteFromGit.image.pullSecrets` | Specify docker-registry secret names as an array                                                  | `[]`                   |\n| `cloneStaticSiteFromGit.repository`        | Git Repository to clone static content from                                                       | `\"\"`                   |\n| `cloneStaticSiteFromGit.branch`            | Git branch to checkout                                                                            | `\"\"`                   |\n| `cloneStaticSiteFromGit.interval`          | Interval for sidecar container pull from the Git repository                                       | `60`                   |\n| `cloneStaticSiteFromGit.gitClone.command`  | Override default container command for git-clone-repository                                       | `[]`                   |\n| `cloneStaticSiteFromGit.gitClone.args`     | Override default container args for git-clone-repository                                          | `[]`                   |\n| `cloneStaticSiteFromGit.gitSync.command`   | Override default container command for git-repo-syncer                                            | `[]`                   |\n| `cloneStaticSiteFromGit.gitSync.args`      | Override default container args for git-repo-syncer                                               | `[]`                   |\n| `cloneStaticSiteFromGit.extraEnvVars`      | Additional environment variables to set for the in the containers that clone static site from git | `[]`                   |\n| `cloneStaticSiteFromGit.extraVolumeMounts` | Add extra volume mounts for the Git containers                                                    | `[]`                   |\n| `serverBlock`                              | Custom server block to be added to NGINX configuration                                            | `\"\"`                   |\n| `existingServerBlockConfigmap`             | ConfigMap with custom server block to be added to NGINX configuration                             | `\"\"`                   |\n| `staticSiteConfigmap`                      | Name of existing ConfigMap with the server static site content                                    | `\"\"`                   |\n| `staticSitePVC`                            | Name of existing PVC with the server static site content                                          | `\"\"`                   |\n\n\n### LDAP parameters\n\n| Name                                            | Description                                                                              | Value                            |\n| ----------------------------------------------- | ---------------------------------------------------------------------------------------- | -------------------------------- |\n| `ldapDaemon.enabled`                            | Enable LDAP Auth Daemon proxy                                                            | `false`                          |\n| `ldapDaemon.image.registry`                     | LDAP AUth Daemon Image registry                                                          | `docker.io`                      |\n| `ldapDaemon.image.repository`                   | LDAP Auth Daemon Image repository                                                        | `bitnami/nginx-ldap-auth-daemon` |\n| `ldapDaemon.image.tag`                          | LDAP Auth Daemon Image tag (immutable tags are recommended)                              | `0.20200116.0-debian-10-r556`    |\n| `ldapDaemon.image.pullPolicy`                   | LDAP Auth Daemon Image pull policy                                                       | `IfNotPresent`                   |\n| `ldapDaemon.port`                               | LDAP Auth Daemon port                                                                    | `8888`                           |\n| `ldapDaemon.ldapConfig.uri`                     | LDAP Server URI, `ldap[s]:/<hostname>:<port>`                                            | `\"\"`                             |\n| `ldapDaemon.ldapConfig.baseDN`                  | LDAP root DN to begin the search for the user                                            | `\"\"`                             |\n| `ldapDaemon.ldapConfig.bindDN`                  | DN of user to bind to LDAP                                                               | `\"\"`                             |\n| `ldapDaemon.ldapConfig.bindPassword`            | Password for the user to bind to LDAP                                                    | `\"\"`                             |\n| `ldapDaemon.ldapConfig.filter`                  | LDAP search filter for search                                                            | `\"\"`                             |\n| `ldapDaemon.ldapConfig.httpRealm`               | LDAP HTTP auth realm                                                                     | `\"\"`                             |\n| `ldapDaemon.ldapConfig.httpCookieName`          | HTTP cookie name to be used in LDAP Auth                                                 | `\"\"`                             |\n| `ldapDaemon.nginxServerBlock`                   | NGINX server block that configures LDAP communication. Overrides `ldapDaemon.ldapConfig` | `\"\"`                             |\n| `ldapDaemon.existingNginxServerBlockSecret`     | Name of existing Secret with a NGINX server block to use for LDAP communication          | `\"\"`                             |\n| `ldapDaemon.livenessProbe.enabled`              | Enable livenessProbe                                                                     | `true`                           |\n| `ldapDaemon.livenessProbe.initialDelaySeconds`  | Initial delay seconds for livenessProbe                                                  | `30`                             |\n| `ldapDaemon.livenessProbe.periodSeconds`        | Period seconds for livenessProbe                                                         | `10`                             |\n| `ldapDaemon.livenessProbe.timeoutSeconds`       | Timeout seconds for livenessProbe                                                        | `5`                              |\n| `ldapDaemon.livenessProbe.failureThreshold`     | Failure threshold for livenessProbe                                                      | `6`                              |\n| `ldapDaemon.livenessProbe.successThreshold`     | Success threshold for livenessProbe                                                      | `1`                              |\n| `ldapDaemon.readinessProbe.enabled`             | Enable readinessProbe                                                                    | `true`                           |\n| `ldapDaemon.readinessProbe.initialDelaySeconds` | Initial delay seconds for readinessProbe                                                 | `5`                              |\n| `ldapDaemon.readinessProbe.periodSeconds`       | Period seconds for readinessProbe                                                        | `5`                              |\n| `ldapDaemon.readinessProbe.timeoutSeconds`      | Timeout seconds for readinessProbe                                                       | `3`                              |\n| `ldapDaemon.readinessProbe.failureThreshold`    | Failure threshold for readinessProbe                                                     | `3`                              |\n| `ldapDaemon.readinessProbe.successThreshold`    | Success threshold for readinessProbe                                                     | `1`                              |\n| `ldapDaemon.customLivenessProbe`                | Custom Liveness probe                                                                    | `{}`                             |\n| `ldapDaemon.customReadinessProbe`               | Custom Rediness probe                                                                    | `{}`                             |\n\n\n### Traffic Exposure parameters\n\n| Name                            | Description                                                                                                                      | Value                    |\n| ------------------------------- | -------------------------------------------------------------------------------------------------------------------------------- | ------------------------ |\n| `service.type`                  | Service type                                                                                                                     | `LoadBalancer`           |\n| `service.port`                  | Service HTTP port                                                                                                                | `80`                     |\n| `service.httpsPort`             | Service HTTPS port                                                                                                               | `443`                    |\n| `service.nodePorts`             | Specify the nodePort(s) value(s) for the LoadBalancer and NodePort service types.                                                | `{}`                     |\n| `service.targetPort`            | Target port reference value for the Loadbalancer service types can be specified explicitly.                                      | `{}`                     |\n| `service.loadBalancerIP`        | LoadBalancer service IP address                                                                                                  | `\"\"`                     |\n| `service.annotations`           | Service annotations                                                                                                              | `{}`                     |\n| `service.externalTrafficPolicy` | Enable client source IP preservation                                                                                             | `Cluster`                |\n| `ingress.enabled`               | Set to true to enable ingress record generation                                                                                  | `false`                  |\n| `ingress.pathType`              | Ingress path type                                                                                                                | `ImplementationSpecific` |\n| `ingress.apiVersion`            | Force Ingress API version (automatically detected if not set)                                                                    | `\"\"`                     |\n| `ingress.hostname`              | Default host for the ingress resource                                                                                            | `nginx.local`            |\n| `ingress.path`                  | The Path to Nginx. You may need to set this to '/*' in order to use this with ALB ingress controllers.                           | `/`                      |\n| `ingress.annotations`           | Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations. | `{}`                     |\n| `ingress.tls`                   | Create TLS Secret                                                                                                                | `false`                  |\n| `ingress.extraHosts`            | The list of additional hostnames to be covered with this ingress record.                                                         | `[]`                     |\n| `ingress.extraPaths`            | Any additional arbitrary paths that may need to be added to the ingress under the main host.                                     | `[]`                     |\n| `ingress.extraTls`              | The tls configuration for additional hostnames to be covered with this ingress record.                                           | `[]`                     |\n| `ingress.secrets`               | If you're providing your own certificates, please use this to add the certificates as secrets                                    | `[]`                     |\n| `healthIngress.enabled`         | Set to true to enable health ingress record generation                                                                           | `false`                  |\n| `healthIngress.pathType`        | Ingress path type                                                                                                                | `ImplementationSpecific` |\n| `healthIngress.hostname`        | When the health ingress is enabled, a host pointing to this will be created                                                      | `example.local`          |\n| `healthIngress.annotations`     | Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations. | `{}`                     |\n| `healthIngress.tls`             | Enable TLS configuration for the hostname defined at `healthIngress.hostname` parameter                                          | `false`                  |\n| `healthIngress.extraHosts`      | The list of additional hostnames to be covered with this health ingress record                                                   | `[]`                     |\n| `healthIngress.extraTls`        | TLS configuration for additional hostnames to be covered                                                                         | `[]`                     |\n| `healthIngress.secrets`         | TLS Secret configuration                                                                                                         | `[]`                     |\n\n\n### Metrics parameters\n\n| Name                                       | Description                                                                                                                               | Value                    |\n| ------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------- | ------------------------ |\n| `metrics.enabled`                          | Start a Prometheus exporter sidecar container                                                                                             | `false`                  |\n| `metrics.port`                             | NGINX Container Status Port scraped by Prometheus Exporter                                                                                | `\"\"`                     |\n| `metrics.image.registry`                   | NGINX Prometheus exporter image registry                                                                                                  | `docker.io`              |\n| `metrics.image.repository`                 | NGINX Prometheus exporter image repository                                                                                                | `bitnami/nginx-exporter` |\n| `metrics.image.tag`                        | NGINX Prometheus exporter image tag (immutable tags are recommended)                                                                      | `0.10.0-debian-10-r8`    |\n| `metrics.image.pullPolicy`                 | NGINX Prometheus exporter image pull policy                                                                                               | `IfNotPresent`           |\n| `metrics.image.pullSecrets`                | Specify docker-registry secret names as an array                                                                                          | `[]`                     |\n| `metrics.podAnnotations`                   | Additional annotations for NGINX Prometheus exporter pod(s)                                                                               | `{}`                     |\n| `metrics.securityContext.enabled`          | Enabled NGINX Exporter containers' Security Context                                                                                       | `false`                  |\n| `metrics.securityContext.runAsUser`        | Set NGINX Exporter container's Security Context runAsUser                                                                                 | `1001`                   |\n| `metrics.service.port`                     | NGINX Prometheus exporter service port                                                                                                    | `9113`                   |\n| `metrics.service.annotations`              | Annotations for the Prometheus exporter service                                                                                           | `{}`                     |\n| `metrics.resources.limits`                 | The resources limits for the NGINX Prometheus exporter container                                                                          | `{}`                     |\n| `metrics.resources.requests`               | The requested resources for the NGINX Prometheus exporter container                                                                       | `{}`                     |\n| `metrics.serviceMonitor.enabled`           | Creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)                                               | `false`                  |\n| `metrics.serviceMonitor.namespace`         | Namespace in which Prometheus is running                                                                                                  | `\"\"`                     |\n| `metrics.serviceMonitor.interval`          | Interval at which metrics should be scraped.                                                                                              | `\"\"`                     |\n| `metrics.serviceMonitor.scrapeTimeout`     | Timeout after which the scrape is ended                                                                                                   | `\"\"`                     |\n| `metrics.serviceMonitor.selector`          | Prometheus instance selector labels                                                                                                       | `{}`                     |\n| `metrics.serviceMonitor.additionalLabels`  | Additional labels that can be used so PodMonitor will be discovered by Prometheus                                                         | `{}`                     |\n| `metrics.serviceMonitor.relabelings`       | RelabelConfigs to apply to samples before scraping                                                                                        | `[]`                     |\n| `metrics.serviceMonitor.metricRelabelings` | MetricRelabelConfigs to apply to samples before ingestion                                                                                 | `[]`                     |\n| `metrics.prometheusRule.enabled`           | if `true`, creates a Prometheus Operator PrometheusRule (also requires `metrics.enabled` to be `true` and `metrics.prometheusRule.rules`) | `false`                  |\n| `metrics.prometheusRule.namespace`         | Namespace for the PrometheusRule Resource (defaults to the Release Namespace)                                                             | `\"\"`                     |\n| `metrics.prometheusRule.additionalLabels`  | Additional labels that can be used so PrometheusRule will be discovered by Prometheus                                                     | `{}`                     |\n| `metrics.prometheusRule.rules`             | Prometheus Rule definitions                                                                                                               | `[]`                     |\n\n\nSpecify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,\n\n```bash\n$ helm install my-release \\\n  --set imagePullPolicy=Always \\\n    bitnami/nginx\n```\n\nThe above command sets the `imagePullPolicy` to `Always`.\n\nAlternatively, a YAML file that specifies the values for the parameters can be provided while installing the chart. For example,\n\n```bash\n$ helm install my-release -f values.yaml bitnami/nginx\n```\n\n> **Tip**: You can use the default [values.yaml](values.yaml)\n\n## Configuration and installation details\n\n### [Rolling VS Immutable tags](https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/)\n\nIt is strongly recommended to use immutable tags in a production environment. This ensures your deployment does not change automatically if the same tag is updated with a different image.\n\nBitnami will release a new chart updating its containers if a new version of the main container, significant changes, or critical vulnerabilities exist.\n\n### Use a different NGINX version\n\nTo modify the application version used in this chart, specify a different version of the image using the `image.tag` parameter and/or a different repository using the `image.repository` parameter. Refer to the [chart documentation for more information on these parameters and how to use them with images from a private registry](https://docs.bitnami.com/kubernetes/infrastructure/nginx/configuration/change-image-version/).\n\n### Deploying your custom web application\n\nThe NGINX chart allows you to deploy a custom web application using one of the following methods:\n\n- Cloning from a git repository: Set `cloneStaticSiteFromGit.enabled` to `true` and set the repository and branch using the `cloneStaticSiteFromGit.repository` and  `cloneStaticSiteFromGit.branch` parameters. A sidecar will also pull the latest changes in an interval set by `cloneStaticSitesFromGit.interval`.\n- Providing a ConfigMap: Set the `staticSiteConfigMap` value to mount a ConfigMap in the NGINX html folder.\n- Using an existing PVC: Set the `staticSitePVC` value to mount an PersistentVolumeClaim with the static site content.\n\nYou can deploy a example web application using git deploying the chart with the following parameters:\n\n```console\ncloneStaticSiteFromGit.enabled=true\ncloneStaticSiteFromGit.repository=https://github.com/mdn/beginner-html-site-styled.git\ncloneStaticSiteFromGit.branch=master\n```\n\n### Providing a custom server block\n\nThis helm chart supports using custom custom server block for NGINX to use.\n\nYou can use the `serverBlock` value to provide a custom server block for NGINX to use. To do this, create a values files with your server block and install the chart using it:\n\n```yaml\nserverBlock: |-\n  server {\n    listen 0.0.0.0:8080;\n    location / {\n      return 200 \"hello!\";\n    }\n  }\n```\n\n> Warning: The above example is not compatible with enabling Prometheus metrics since it affects the `/status` endpoint.\n\nIn addition, you can also set an external ConfigMap with the configuration file. This is done by setting the `existingServerBlockConfigmap` parameter. Note that this will override the previous option.\n\n### Enabling LDAP\n\nIn some scenarios, you may require users to authenticate in order to gain access to protected resources. By enabling LDAP, NGINX will make use of an Authorization Daemon to proxy those identification requests against a given LDAP Server.\n\n```\n                   ------------               --------------              ---------------\n                  |   NGINX    |    ----->   |     NGINX    |   ----->   |     LDAP      |\n                  |   server   |    <-----   |  ldap daemon |   <-----   |     server    |\n                   ------------               --------------              ---------------\n```\n\nIn order to enable LDAP authentication you can set the `ldapDaemon.enabled` property and follow these steps:\n\n1. NGINX server needs to be configured to be self-aware of the proxy. In order to do so, use the `ldapDaemon.nginxServerBlock` property to provide with an additional server block, that will instruct NGINX to use it (see `values.yaml`). Alternatively, you can specify this server block configuration using an external Secret using the property `ldapDaemon.existingNginxServerBlockSecret`.\n\n2. Supply your LDAP Server connection details either in the aforementioned server block (setting request headers) or specifying them in `ldapDaemon.ldapConfig`. e.g. The following two approaches are equivalent:\n\n_Approach A) Specify connection details using the `ldapDaemon.ldapConfig` property_\n\n```yaml\nldapDaemon:\n  enabled: true\n  ldapConfig:\n    uri: \"ldap://YOUR_LDAP_SERVER_IP:YOUR_LDAP_SERVER_PORT\"\n    baseDN: \"dc=example,dc=org\"\n    bindDN: \"cn=admin,dc=example,dc=org\"\n    bindPassword: \"adminpassword\"\n\n  nginxServerBlock: |-\n    server {\n    listen 0.0.0.0:{{ .Values.containerPorts.http }};\n\n    # You can provide a special subPath or the root\n    location = / {\n        auth_request /auth-proxy;\n    }\n\n    location = /auth-proxy {\n        internal;\n\n        proxy_pass http://127.0.0.1:{{ .Values.ldapDaemon.port }};\n    }\n    }\n```\n\n_Approach B) Specify connection details directly in the server block_\n\n```yaml\nldapDaemon:\n  enabled: true\n  nginxServerBlock: |-\n    server {\n    listen 0.0.0.0:{{ .Values.containerPorts.http }};\n\n    # You can provide a special subPath or the root\n    location = / {\n        auth_request /auth-proxy;\n    }\n\n    location = /auth-proxy {\n        internal;\n\n        proxy_pass http://127.0.0.1:{{ .Values.ldapDaemon.port }};\n\n        ###############################################################\n        # YOU SHOULD CHANGE THE FOLLOWING TO YOUR LDAP CONFIGURATION  #\n        ###############################################################\n\n        # URL and port for connecting to the LDAP server\n        proxy_set_header X-Ldap-URL \"ldap://YOUR_LDAP_SERVER_IP:YOUR_LDAP_SERVER_PORT\";\n\n        # Base DN\n        proxy_set_header X-Ldap-BaseDN \"dc=example,dc=org\";\n\n        # Bind DN\n        proxy_set_header X-Ldap-BindDN \"cn=admin,dc=example,dc=org\";\n\n        # Bind password\n        proxy_set_header X-Ldap-BindPass \"adminpassword\";\n    }\n    }\n```\n\n### Adding extra environment variables\n\nIn case you want to add extra environment variables (useful for advanced operations like custom init scripts), you can use the `extraEnvVars` property.\n\n```yaml\nextraEnvVars:\n  - name: LOG_LEVEL\n    value: error\n```\n\nAlternatively, you can use a ConfigMap or a Secret with the environment variables. To do so, use the `extraEnvVarsCM` or the `extraEnvVarsSecret` values.\n\n### Setting Pod's affinity\n\nThis chart allows you to set your custom affinity using the `affinity` parameter. Find more information about Pod's affinity in the [kubernetes documentation](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity).\n\nAs an alternative, you can use of the preset configurations for pod affinity, pod anti-affinity, and node affinity available at the [bitnami/common](https://github.com/bitnami/charts/tree/master/bitnami/common#affinity) chart. To do so, set the `podAffinityPreset`, `podAntiAffinityPreset`, or `nodeAffinityPreset` parameters.\n\n### Deploying extra resources\n\nThere are cases where you may want to deploy extra objects, such a ConfigMap containing your app's configuration or some extra deployment with a micro service used by your app. For covering this case, the chart allows adding the full specification of other objects using the `extraDeploy` parameter.\n\n### Ingress\n\nThis chart provides support for ingress resources. If you have an ingress controller installed on your cluster, such as [nginx-ingress-controller](https://github.com/bitnami/charts/tree/master/bitnami/nginx-ingress-controller) or [contour](https://github.com/bitnami/charts/tree/master/bitnami/contour) you can utilize the ingress controller to serve your application.\n\nTo enable ingress integration, please set `ingress.enabled` to `true`.\n\n#### Hosts\n\nMost likely you will only want to have one hostname that maps to this NGINX installation. If that's your case, the property `ingress.hostname` will set it. However, it is possible to have more than one host. To facilitate this, the `ingress.extraHosts` object can be specified as an array. You can also use `ingress.extraTLS` to add the TLS configuration for extra hosts.\n\nFor each host indicated at `ingress.extraHosts`, please indicate a `name`, `path`, and any `annotations` that you may want the ingress controller to know about.\n\nFor annotations, please see [this document](https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md). Not all annotations are supported by all ingress controllers, but this document does a good job of indicating which annotation is supported by many popular ingress controllers.\n\n## Troubleshooting\n\nFind more information about how to deal with common errors related to Bitnami's Helm charts in [this troubleshooting guide](https://docs.bitnami.com/general/how-to/troubleshoot-helm-chart-issues).\n\n## Upgrading\n\n### To 8.0.0\n\n[On November 13, 2020, Helm v2 support was formally finished](https://github.com/helm/charts#status-of-the-project), this major version is the result of the required changes applied to the Helm Chart to be able to incorporate the different features added in Helm v3 and to be consistent with the Helm project itself regarding the Helm v2 EOL.\n\n**What changes were introduced in this major version?**\n\n- Previous versions of this Helm Chart use `apiVersion: v1` (installable by both Helm 2 and 3), this Helm Chart was updated to `apiVersion: v2` (installable by Helm 3 only). [Here](https://helm.sh/docs/topics/charts/#the-apiversion-field) you can find more information about the `apiVersion` field.\n- Move dependency information from the *requirements.yaml* to the *Chart.yaml*\n- After running `helm dependency update`, a *Chart.lock* file is generated containing the same structure used in the previous *requirements.lock*\n- The different fields present in the *Chart.yaml* file has been ordered alphabetically in a homogeneous way for all the Bitnami Helm Charts\n\n**Considerations when upgrading to this version**\n\n- If you want to upgrade to this version from a previous one installed with Helm v3, you shouldn't face any issues\n- If you want to upgrade to this version using Helm v2, this scenario is not supported as this version doesn't support Helm v2 anymore\n- If you installed the previous version with Helm v2 and wants to upgrade to this version with Helm v3, please refer to the [official Helm documentation](https://helm.sh/docs/topics/v2_v3_migration/#migration-use-cases) about migrating from Helm v2 to v3\n\n**Useful links**\n\n- https://docs.bitnami.com/tutorials/resolve-helm2-helm3-post-migration-issues/\n- https://helm.sh/docs/topics/v2_v3_migration/\n- https://helm.sh/blog/migrate-from-helm-v2-to-helm-v3/\n\n### To 7.0.0\n\n- This version also introduces `bitnami/common`, a [library chart](https://helm.sh/docs/topics/library_charts/#helm) as a dependency. More documentation about this new utility could be found [here](https://github.com/bitnami/charts/tree/master/bitnami/common#bitnami-common-library-chart). Please, make sure that you have updated the chart dependencies before executing any upgrade.\n- Ingress configuration was also adapted to follow the Helm charts best practices.\n\n> Note: There is no backwards compatibility due to the above mentioned changes. It's necessary to install a new release of the chart, and migrate your existing application to the new NGINX instances.\n\n### To 5.6.0\n\nAdded support for the use of LDAP.\n\n### To 5.0.0\n\nBackwards compatibility is not guaranteed unless you modify the labels used on the chart's deployments.\nUse the workaround below to upgrade from versions previous to 5.0.0. The following example assumes that the release name is nginx:\n\n```console\n$ kubectl delete deployment nginx --cascade=false\n$ helm upgrade nginx bitnami/nginx\n```\n\n### To 1.0.0\n\nBackwards compatibility is not guaranteed unless you modify the labels used on the chart's deployments.\nUse the workaround below to upgrade from versions previous to 1.0.0. The following example assumes that the release name is nginx:\n\n```console\n$ kubectl patch deployment nginx --type=json -p='[{\"op\": \"remove\", \"path\": \"/spec/selector/matchLabels/chart\"}]'\n```\n\n## Bitnami Kubernetes Documentation\n\nBitnami Kubernetes documentation is available at [https://docs.bitnami.com/](https://docs.bitnami.com/). You can find there the following resources:\n\n- [Documentation for NGINX Helm chart](https://docs.bitnami.com/kubernetes/infrastructure/nginx/)\n- [Get Started with Kubernetes guides](https://docs.bitnami.com/kubernetes/)\n- [Bitnami Helm charts documentation](https://docs.bitnami.com/kubernetes/apps/)\n- [Kubernetes FAQs](https://docs.bitnami.com/kubernetes/faq/)\n- [Kubernetes Developer guides](https://docs.bitnami.com/tutorials/)\n\n## License\n\nCopyright &copy; 2022 Bitnami\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.","values":"## @section Global parameters\n## Global Docker image parameters\n## Please, note that this will override the image parameters, including dependencies, configured to use the global value\n## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass\n\n## @param global.imageRegistry Global Docker image registry\n## @param global.imagePullSecrets Global Docker registry secret names as an array\n##\nglobal:\n  imageRegistry: \"\"\n  ## E.g.\n  ## imagePullSecrets:\n  ##   - myRegistryKeySecretName\n  ##\n  imagePullSecrets: []\n\n## @section Common parameters\n\n## @param nameOverride String to partially override nginx.fullname template (will maintain the release name)\n##\nnameOverride: \"\"\n## @param fullnameOverride String to fully override nginx.fullname template\n##\nfullnameOverride: \"\"\n## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)\n##\nkubeVersion: \"\"\n## @param clusterDomain Kubernetes Cluster Domain\n##\nclusterDomain: cluster.local\n## @param extraDeploy Extra objects to deploy (value evaluated as a template)\n##\nextraDeploy: []\n## @param commonLabels Add labels to all the deployed resources\n##\ncommonLabels: {}\n## @param commonAnnotations Add annotations to all the deployed resources\n##\ncommonAnnotations: {}\n\n## @section NGINX parameters\n\n## Bitnami NGINX image version\n## ref: https://hub.docker.com/r/bitnami/nginx/tags/\n## @param image.registry NGINX image registry\n## @param image.repository NGINX image repository\n## @param image.tag NGINX image tag (immutable tags are recommended)\n## @param image.pullPolicy NGINX image pull policy\n## @param image.pullSecrets Specify docker-registry secret names as an array\n## @param image.debug Set to true if you would like to see extra information on logs\n##\nimage:\n  registry: docker.io\n  repository: bitnami/nginx\n  tag: 1.21.6-debian-10-r30\n  ## Specify a imagePullPolicy\n  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n  ##\n  pullPolicy: IfNotPresent\n  ## Optionally specify an array of imagePullSecrets.\n  ## Secrets must be manually created in the namespace.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n  ## E.g.:\n  ## pullSecrets:\n  ##   - myRegistryKeySecretName\n  ##\n  pullSecrets: []\n  ## Set to true if you would like to see extra information on logs\n  ##\n  debug: false\n## @param hostAliases Deployment pod host aliases\n## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n##\nhostAliases: []\n## Command and args for running the container (set to default if not set). Use array form\n## @param command Override default container command (useful when using custom images)\n## @param args Override default container args (useful when using custom images)\n##\ncommand: []\nargs: []\n## @param extraEnvVars Extra environment variables to be set on NGINX containers\n## E.g:\n## extraEnvVars:\n##   - name: FOO\n##     value: BAR\n##\nextraEnvVars: []\n## @param extraEnvVarsCM ConfigMap with extra environment variables\n##\nextraEnvVarsCM: \"\"\n## @param extraEnvVarsSecret Secret with extra environment variables\n##\nextraEnvVarsSecret: \"\"\n\n## @section NGINX deployment parameters\n\n## @param replicaCount Number of NGINX replicas to deploy\n##\nreplicaCount: 1\n## @param updateStrategy.type NGINX deployment strategy type\n## @param updateStrategy.rollingUpdate NGINX deployment rolling update configuration parameters\n## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n##\nupdateStrategy:\n  type: RollingUpdate\n  rollingUpdate: {}\n## @param podLabels Additional labels for NGINX pods\n## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n##\npodLabels: {}\n## @param podAnnotations Annotations for NGINX pods\n## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n##\npodAnnotations: {}\n## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n##\npodAffinityPreset: \"\"\n## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n##\npodAntiAffinityPreset: soft\n## Node affinity preset\n## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n##\nnodeAffinityPreset:\n  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n  ##\n  type: \"\"\n  ## @param nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.\n  ## E.g.\n  ## key: \"kubernetes.io/e2e-az-name\"\n  ##\n  key: \"\"\n  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.\n  ## E.g.\n  ## values:\n  ##   - e2e-az1\n  ##   - e2e-az2\n  ##\n  values: []\n## @param affinity Affinity for pod assignment\n## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set\n##\naffinity: {}\n## @param hostNetwork Specify if host network should be enabled for NGINX pod\n##\nhostNetwork: false\n## @param hostIPC Specify if host IPC should be enabled for NGINX pod\n##\nhostIPC: false\n## @param nodeSelector Node labels for pod assignment. Evaluated as a template.\n## Ref: https://kubernetes.io/docs/user-guide/node-selection/\n##\nnodeSelector: {}\n## @param tolerations Tolerations for pod assignment. Evaluated as a template.\n## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n##\ntolerations: {}\n## @param priorityClassName Priority class name\n## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\n##\npriorityClassName: \"\"\n## NGINX pods' Security Context.\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n## @param podSecurityContext.enabled Enabled NGINX pods' Security Context\n## @param podSecurityContext.fsGroup Set NGINX pod's Security Context fsGroup\n## @param podSecurityContext.sysctls sysctl settings of the NGINX pods\n##\npodSecurityContext:\n  enabled: false\n  fsGroup: 1001\n  ## sysctl settings\n  ## Example:\n  ## sysctls:\n  ## - name: net.core.somaxconn\n  ##   value: \"10000\"\n  ##\n  sysctls: []\n## NGINX containers' Security Context.\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container\n## @param containerSecurityContext.enabled Enabled NGINX containers' Security Context\n## @param containerSecurityContext.runAsUser Set NGINX container's Security Context runAsUser\n## @param containerSecurityContext.runAsNonRoot Set NGINX container's Security Context runAsNonRoot\n##\ncontainerSecurityContext:\n  enabled: false\n  runAsUser: 1001\n  runAsNonRoot: true\n## Configures the ports NGINX listens on\n## @param containerPorts.http Sets http port inside NGINX container\n## @param containerPorts.https Sets https port inside NGINX container\n##\ncontainerPorts:\n  http: 8080\n  https: \"\"\n## NGINX containers' resource requests and limits\n## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n## We usually recommend not to specify default resources and to leave this as a conscious\n## choice for the user. This also increases chances charts run on environments with little\n## resources, such as Minikube. If you do want to specify resources, uncomment the following\n## lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n## @param resources.limits The resources limits for the NGINX container\n## @param resources.requests The requested resources for the NGINX container\n##\nresources:\n  ## Example:\n  ## limits:\n  ##    cpu: 100m\n  ##    memory: 128Mi\n  limits: {}\n  ## Examples:\n  ## requests:\n  ##    cpu: 100m\n  ##    memory: 128Mi\n  requests: {}\n## NGINX containers' liveness probe.\n## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n## @param livenessProbe.enabled Enable livenessProbe\n## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n## @param livenessProbe.periodSeconds Period seconds for livenessProbe\n## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n## @param livenessProbe.failureThreshold Failure threshold for livenessProbe\n## @param livenessProbe.successThreshold Success threshold for livenessProbe\n##\nlivenessProbe:\n  enabled: true\n  initialDelaySeconds: 30\n  timeoutSeconds: 5\n  periodSeconds: 10\n  failureThreshold: 6\n  successThreshold: 1\n## NGINX containers' readiness probe.\n## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n## @param readinessProbe.enabled Enable readinessProbe\n## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n## @param readinessProbe.periodSeconds Period seconds for readinessProbe\n## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n## @param readinessProbe.failureThreshold Failure threshold for readinessProbe\n## @param readinessProbe.successThreshold Success threshold for readinessProbe\n##\nreadinessProbe:\n  enabled: true\n  initialDelaySeconds: 5\n  timeoutSeconds: 3\n  periodSeconds: 5\n  failureThreshold: 3\n  successThreshold: 1\n## @param customLivenessProbe Override default liveness probe\n##\ncustomLivenessProbe: {}\n## @param customReadinessProbe Override default readiness probe\n##\ncustomReadinessProbe: {}\n## Autoscaling parameters\n## @param autoscaling.enabled Enable autoscaling for NGINX deployment\n## @param autoscaling.minReplicas Minimum number of replicas to scale back\n## @param autoscaling.maxReplicas Maximum number of replicas to scale out\n## @param autoscaling.targetCPU Target CPU utilization percentage\n## @param autoscaling.targetMemory Target Memory utilization percentage\n##\nautoscaling:\n  enabled: false\n  minReplicas: \"\"\n  maxReplicas: \"\"\n  targetCPU: \"\"\n  targetMemory: \"\"\n## @param extraVolumes Array to add extra volumes\n##\nextraVolumes: []\n## @param extraVolumeMounts Array to add extra mount\n##\nextraVolumeMounts: []\n## Pods Service Account\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n##\nserviceAccount:\n  ## @param serviceAccount.create Enable creation of ServiceAccount for nginx pod\n  ##\n  create: false\n  ## @param serviceAccount.name The name of the ServiceAccount to use.\n  ## If not set and create is true, a name is generated using the `common.names.fullname` template\n  name: \"\"\n  ## @param serviceAccount.annotations Annotations for service account. Evaluated as a template.\n  ## Only used if `create` is `true`.\n  ##\n  annotations: {}\n  ## @param serviceAccount.autoMount Auto-mount the service account token in the pod\n  ##\n  autoMount: false\n## @param sidecars Sidecar parameters\n## e.g:\n## sidecars:\n##   - name: your-image-name\n##     image: your-image\n##     imagePullPolicy: Always\n##     ports:\n##       - name: portname\n##         containerPort: 1234\n##\nsidecars: []\n\n## @param sidecarSingleProcessNamespace Enable sharing the process namespace with sidecars\n## This will switch pod.spec.shareProcessNamespace parameter\n##\nsidecarSingleProcessNamespace: false\n\n## @param initContainers Extra init containers\n##\ninitContainers: []\n## Pod Disruption Budget configuration\n## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n##\npdb:\n  ## @param pdb.create Created a PodDisruptionBudget\n  ##\n  create: false\n  ## @param pdb.minAvailable Min number of pods that must still be available after the eviction\n  ##\n  minAvailable: 1\n  ## @param pdb.maxUnavailable Max number of pods that can be unavailable after the eviction\n  ##\n  maxUnavailable: 0\n\n## @section Custom NGINX application parameters\n\n## Get the server static content from a git repository\n## NOTE: This will override staticSiteConfigmap and staticSitePVC\n##\ncloneStaticSiteFromGit:\n  ## @param cloneStaticSiteFromGit.enabled Get the server static content from a Git repository\n  ##\n  enabled: false\n  ## Bitnami Git image version\n  ## ref: https://hub.docker.com/r/bitnami/git/tags/\n  ## @param cloneStaticSiteFromGit.image.registry Git image registry\n  ## @param cloneStaticSiteFromGit.image.repository Git image repository\n  ## @param cloneStaticSiteFromGit.image.tag Git image tag (immutable tags are recommended)\n  ## @param cloneStaticSiteFromGit.image.pullPolicy Git image pull policy\n  ## @param cloneStaticSiteFromGit.image.pullSecrets Specify docker-registry secret names as an array\n  ##\n  image:\n    registry: docker.io\n    repository: bitnami/git\n    tag: 2.35.1-debian-10-r29\n    ## Specify a imagePullPolicy\n    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n    ##\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ## e.g:\n    ## pullSecrets:\n    ##   - myRegistryKeySecretName\n    ##\n    pullSecrets: []\n  ## @param cloneStaticSiteFromGit.repository Git Repository to clone static content from\n  ##\n  repository: \"\"\n  ## @param cloneStaticSiteFromGit.branch Git branch to checkout\n  ##\n  branch: \"\"\n  ## @param cloneStaticSiteFromGit.interval Interval for sidecar container pull from the Git repository\n  ##\n  interval: 60\n  ## Additional configuration for git-clone-repository initContainer\n  ##\n  gitClone:\n    ## @param cloneStaticSiteFromGit.gitClone.command Override default container command for git-clone-repository\n    ##\n    command: []\n    ## @param cloneStaticSiteFromGit.gitClone.args Override default container args for git-clone-repository\n    ##\n    args: []\n  ## Additional configuration for the git-repo-syncer container\n  ##\n  gitSync:\n    ## @param cloneStaticSiteFromGit.gitSync.command Override default container command for git-repo-syncer\n    ##\n    command: []\n    ## @param cloneStaticSiteFromGit.gitSync.args Override default container args for git-repo-syncer\n    ##\n    args: []\n  ## @param cloneStaticSiteFromGit.extraEnvVars Additional environment variables to set for the in the containers that clone static site from git\n  ## E.g:\n  ## extraEnvVars:\n  ##   - name: FOO\n  ##     value: BAR\n  ##\n  extraEnvVars: []\n  ## @param cloneStaticSiteFromGit.extraVolumeMounts Add extra volume mounts for the Git containers\n  ## Useful to mount keys to connect through ssh. (normally used with extraVolumes)\n  ## E.g:\n  ## extraVolumeMounts:\n  ##   - name: ssh-dir\n  ##     mountPath: /root/.ssh/\n  ##\n  extraVolumeMounts: []\n## @param serverBlock Custom server block to be added to NGINX configuration\n## PHP-FPM example server block:\n## serverBlock: |-\n##   server {\n##     listen 0.0.0.0:8080;\n##     root /app;\n##     location / {\n##       index index.html index.php;\n##     }\n##     location ~ \\.php$ {\n##       fastcgi_pass phpfpm-server:9000;\n##       fastcgi_index index.php;\n##       include fastcgi.conf;\n##     }\n##   }\n##\nserverBlock: \"\"\n## @param existingServerBlockConfigmap ConfigMap with custom server block to be added to NGINX configuration\n## NOTE: This will override serverBlock\n##\nexistingServerBlockConfigmap: \"\"\n## @param staticSiteConfigmap Name of existing ConfigMap with the server static site content\n##\nstaticSiteConfigmap: \"\"\n## @param staticSitePVC Name of existing PVC with the server static site content\n## NOTE: This will override staticSiteConfigmap\n##\nstaticSitePVC: \"\"\n\n## @section LDAP parameters\n\n## LDAP Auth Daemon Properties\n## Daemon that will proxy LDAP requests between NGINX and a given LDAP Server\n##\nldapDaemon:\n  ## @param ldapDaemon.enabled Enable LDAP Auth Daemon proxy\n  ##\n  enabled: false\n  ## Bitnami NGINX LDAP Auth Daemon image\n  ## ref: https://hub.docker.com/r/bitnami/nginx-ldap-auth-daemon/tags/\n  ## @param ldapDaemon.image.registry LDAP AUth Daemon Image registry\n  ## @param ldapDaemon.image.repository LDAP Auth Daemon Image repository\n  ## @param ldapDaemon.image.tag LDAP Auth Daemon Image tag (immutable tags are recommended)\n  ## @param ldapDaemon.image.pullPolicy LDAP Auth Daemon Image pull policy\n  ##\n  image:\n    registry: docker.io\n    repository: bitnami/nginx-ldap-auth-daemon\n    tag: 0.20200116.0-debian-10-r598\n    pullPolicy: IfNotPresent\n  ## @param ldapDaemon.port LDAP Auth Daemon port\n  ##\n  port: 8888\n  ## LDAP Auth Daemon Configuration\n  ##\n  ## These different properties define the form of requests performed\n  ## against the given LDAP server\n  ##\n  ## BEWARE THAT THESE VALUES WILL BE IGNORED IF A CUSTOM LDAP SERVER BLOCK\n  ## ALREADY SPECIFIES THEM.\n  ##\n  ##\n  ldapConfig:\n    ## @param ldapDaemon.ldapConfig.uri LDAP Server URI, `ldap[s]:/<hostname>:<port>`\n    ## Must follow the pattern -> ldap[s]:/<hostname>:<port>\n    ##\n    uri: \"\"\n    ## @param ldapDaemon.ldapConfig.baseDN LDAP root DN to begin the search for the user\n    ##\n    baseDN: \"\"\n    ## @param ldapDaemon.ldapConfig.bindDN DN of user to bind to LDAP\n    ##\n    bindDN: \"\"\n    ## @param ldapDaemon.ldapConfig.bindPassword Password for the user to bind to LDAP\n    ##\n    bindPassword: \"\"\n    ## @param ldapDaemon.ldapConfig.filter LDAP search filter for search\n    ##\n    filter: \"\"\n    ## @param ldapDaemon.ldapConfig.httpRealm LDAP HTTP auth realm\n    ##\n    httpRealm: \"\"\n    ## @param ldapDaemon.ldapConfig.httpCookieName HTTP cookie name to be used in LDAP Auth\n    ##\n    httpCookieName: \"\"\n  ## @param ldapDaemon.nginxServerBlock [string] NGINX server block that configures LDAP communication. Overrides `ldapDaemon.ldapConfig`\n  ## NGINX Configuration File containing the directives (that define how LDAP requests are performed) and tells NGINX to\n  ## use the LDAP Daemon as proxy. Besides, it defines the routes that will require of LDAP auth\n  ## in order to be accessed.\n  ##\n  ## If LDAP directives are provided, they will take precedence over\n  ## the ones specified in ldapConfig.\n  ##\n  ## This will be evaluated as a template.\n  ##\n  nginxServerBlock: |-\n    server {\n    listen 0.0.0.0:{{ .Values.containerPorts.http }};\n\n    # You can provide a special subPath or the root\n    location = / {\n        auth_request /auth-proxy;\n    }\n\n    location = /auth-proxy {\n        internal;\n\n        proxy_pass http://127.0.0.1:{{ .Values.ldapDaemon.port }};\n\n        ###############################################################\n        # YOU SHOULD CHANGE THE FOLLOWING TO YOUR LDAP CONFIGURATION  #\n        ###############################################################\n\n        # URL and port for connecting to the LDAP server\n        # proxy_set_header X-Ldap-URL \"ldap://YOUR_LDAP_SERVER_IP:YOUR_LDAP_SERVER_PORT\";\n\n        # Base DN\n        # proxy_set_header X-Ldap-BaseDN \"dc=example,dc=org\";\n\n        # Bind DN\n        # proxy_set_header X-Ldap-BindDN \"cn=admin,dc=example,dc=org\";\n\n        # Bind password\n        # proxy_set_header X-Ldap-BindPass \"adminpassword\";\n    }\n    }\n  ## @param ldapDaemon.existingNginxServerBlockSecret Name of existing Secret with a NGINX server block to use for LDAP communication\n  ## Use an existing Secret holding an NGINX Configuration file that configures LDAP requests\n  ## If provided, both nginxServerBlock and ldapConfig properties are ignored.\n  ##\n  existingNginxServerBlockSecret: \"\"\n  ## LDAP Auth Daemon containers' liveness probe.\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param ldapDaemon.livenessProbe.enabled Enable livenessProbe\n  ## @param ldapDaemon.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n  ## @param ldapDaemon.livenessProbe.periodSeconds Period seconds for livenessProbe\n  ## @param ldapDaemon.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n  ## @param ldapDaemon.livenessProbe.failureThreshold Failure threshold for livenessProbe\n  ## @param ldapDaemon.livenessProbe.successThreshold Success threshold for livenessProbe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 30\n    timeoutSeconds: 5\n    periodSeconds: 10\n    failureThreshold: 6\n    successThreshold: 1\n  ## LDAP Auth Daemon containers' readiness probe.\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param ldapDaemon.readinessProbe.enabled Enable readinessProbe\n  ## @param ldapDaemon.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n  ## @param ldapDaemon.readinessProbe.periodSeconds Period seconds for readinessProbe\n  ## @param ldapDaemon.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n  ## @param ldapDaemon.readinessProbe.failureThreshold Failure threshold for readinessProbe\n  ## @param ldapDaemon.readinessProbe.successThreshold Success threshold for readinessProbe\n  ##\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    timeoutSeconds: 3\n    periodSeconds: 5\n    failureThreshold: 3\n    successThreshold: 1\n  ## @param ldapDaemon.customLivenessProbe Custom Liveness probe\n  ##\n  customLivenessProbe: {}\n  ## @param ldapDaemon.customReadinessProbe Custom Rediness probe\n  ##\n  customReadinessProbe: {}\n\n## @section Traffic Exposure parameters\n\n## NGINX Service properties\n##\nservice:\n  ## @param service.type Service type\n  ##\n  type: LoadBalancer\n  ## @param service.port Service HTTP port\n  ##\n  port: 80\n  ## @param service.httpsPort Service HTTPS port\n  ##\n  httpsPort: 443\n  ## @param service.nodePorts [object] Specify the nodePort(s) value(s) for the LoadBalancer and NodePort service types.\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n  ##\n  nodePorts:\n    http: \"\"\n    https: \"\"\n  ## @param service.targetPort [object] Target port reference value for the Loadbalancer service types can be specified explicitly.\n  ## Listeners for the Loadbalancer can be custom mapped to the http or https service.\n  ## Example: Mapping the https listener to targetPort http [http: https]\n  ##\n  targetPort:\n    http: http\n    https: https\n  ## @param service.loadBalancerIP LoadBalancer service IP address\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer\n  ##\n  loadBalancerIP: \"\"\n  ## @param service.annotations Service annotations\n  ## This can be used to set the LoadBalancer service type to internal only.\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer\n  ##\n  annotations: {}\n  ## @param service.externalTrafficPolicy Enable client source IP preservation\n  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n  ##\n  externalTrafficPolicy: Cluster\n## Configure the ingress resource that allows you to access the\n## Nginx installation. Set up the URL\n## ref: https://kubernetes.io/docs/user-guide/ingress/\n##\ningress:\n  ## @param ingress.enabled Set to true to enable ingress record generation\n  ##\n  enabled: false\n  ## DEPRECATED: Use ingress.annotations instead of ingress.certManager\n  ## certManager: false\n  ##\n\n  ## @param ingress.pathType Ingress path type\n  ##\n  pathType: ImplementationSpecific\n  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)\n  ##\n  apiVersion: \"\"\n  ## @param ingress.hostname Default host for the ingress resource\n  ##\n  hostname: nginx.local\n  ## @param ingress.path The Path to Nginx. You may need to set this to '/*' in order to use this with ALB ingress controllers.\n  ##\n  path: /\n  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.\n  ## For a full list of possible ingress annotations, please see\n  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md\n  ## Use this parameter to set the required annotations for cert-manager, see\n  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations\n  ##\n  ## e.g:\n  ## annotations:\n  ##   kubernetes.io/ingress.class: nginx\n  ##   cert-manager.io/cluster-issuer: cluster-issuer-name\n  ##\n  annotations: {}\n  ## @param ingress.tls Create TLS Secret\n  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf \"%s-tls\" .Values.ingress.hostname }}\n  ## You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it\n  ##\n  tls: false\n  ## @param ingress.extraHosts The list of additional hostnames to be covered with this ingress record.\n  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array\n  ## extraHosts:\n  ## - name: nginx.local\n  ##   path: /\n  ##\n  extraHosts: []\n  ## @param ingress.extraPaths Any additional arbitrary paths that may need to be added to the ingress under the main host.\n  ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.\n  ## extraPaths:\n  ## - path: /*\n  ##   backend:\n  ##     serviceName: ssl-redirect\n  ##     servicePort: use-annotation\n  ##\n  extraPaths: []\n  ## @param ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.\n  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls\n  ## extraTls:\n  ## - hosts:\n  ##     - nginx.local\n  ##   secretName: nginx.local-tls\n  ##\n  extraTls: []\n  ## @param ingress.secrets If you're providing your own certificates, please use this to add the certificates as secrets\n  ## key and certificate should start with -----BEGIN CERTIFICATE----- or\n  ## -----BEGIN RSA PRIVATE KEY-----\n  ##\n  ## name should line up with a tlsSecret set further up\n  ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set\n  ##\n  ## It is also possible to create and manage the certificates outside of this helm chart\n  ## Please see README.md for more information\n  ## e.g:\n  ## - name: nginx.local-tls\n  ##   key:\n  ##   certificate:\n  ##\n  secrets: []\n## Health Ingress parameters\n##\nhealthIngress:\n  ## @param healthIngress.enabled Set to true to enable health ingress record generation\n  ##\n  enabled: false\n  ## DEPRECATED: Use ingress.annotations instead of ingress.certManager\n  ## certManager: false\n  ##\n\n  ## @param healthIngress.pathType Ingress path type\n  ##\n  pathType: ImplementationSpecific\n  ## @param healthIngress.hostname When the health ingress is enabled, a host pointing to this will be created\n  ##\n  hostname: example.local\n  ## @param healthIngress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.\n  ## For a full list of possible ingress annotations, please see\n  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md\n  ## Use this parameter to set the required annotations for cert-manager, see\n  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations\n  ##\n  ## e.g:\n  ## annotations:\n  ##   kubernetes.io/ingress.class: nginx\n  ##   cert-manager.io/cluster-issuer: cluster-issuer-name\n  ##\n  annotations: {}\n  ## @param healthIngress.tls Enable TLS configuration for the hostname defined at `healthIngress.hostname` parameter\n  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf \"%s-tls\" .Values.healthIngress.hostname }}\n  ## You can use the healthIngress.secrets parameter to create this TLS secret, relay on cert-manager to create it, or\n  ## let the chart create self-signed certificates for you\n  ##\n  tls: false\n  ## @param healthIngress.extraHosts The list of additional hostnames to be covered with this health ingress record\n  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array\n  ## E.g.\n  ## extraHosts:\n  ##   - name: example.local\n  ##     path: /\n  ##\n  extraHosts: []\n  ## @param healthIngress.extraTls TLS configuration for additional hostnames to be covered\n  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls\n  ## E.g.\n  ## extraTls:\n  ##   - hosts:\n  ##       - example.local\n  ##     secretName: example.local-tls\n  ##\n  extraTls: []\n  ## @param healthIngress.secrets TLS Secret configuration\n  ## If you're providing your own certificates, please use this to add the certificates as secrets\n  ## key and certificate should start with -----BEGIN CERTIFICATE----- or -----BEGIN RSA PRIVATE KEY-----\n  ## name should line up with a secretName set further up\n  ## If it is not set and you're using cert-manager, this is unneeded, as it will create the secret for you\n  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created\n  ## It is also possible to create and manage the certificates outside of this helm chart\n  ## Please see README.md for more information\n  ##\n  ## E.g.\n  ## secrets:\n  ##   - name: example.local-tls\n  ##     key:\n  ##     certificate:\n  ##\n  secrets: []\n\n## @section Metrics parameters\n\n## Prometheus Exporter / Metrics\n##\nmetrics:\n  ## @param metrics.enabled Start a Prometheus exporter sidecar container\n  ##\n  enabled: false\n  ## @param metrics.port NGINX Container Status Port scraped by Prometheus Exporter\n  ## Defaults to specified http port\n  port: \"\"\n  ## Bitnami NGINX Prometheus Exporter image\n  ## ref: https://hub.docker.com/r/bitnami/nginx-exporter/tags/\n  ## @param metrics.image.registry NGINX Prometheus exporter image registry\n  ## @param metrics.image.repository NGINX Prometheus exporter image repository\n  ## @param metrics.image.tag NGINX Prometheus exporter image tag (immutable tags are recommended)\n  ## @param metrics.image.pullPolicy NGINX Prometheus exporter image pull policy\n  ## @param metrics.image.pullSecrets Specify docker-registry secret names as an array\n  ##\n  image:\n    registry: docker.io\n    repository: bitnami/nginx-exporter\n    tag: 0.10.0-debian-10-r64\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ## e.g:\n    ## pullSecrets:\n    ##   - myRegistryKeySecretName\n    ##\n    pullSecrets: []\n  ## @param metrics.podAnnotations Additional annotations for NGINX Prometheus exporter pod(s)\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n  ##\n  podAnnotations: {}\n  ## Container Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n  ## @param metrics.securityContext.enabled Enabled NGINX Exporter containers' Security Context\n  ## @param metrics.securityContext.runAsUser Set NGINX Exporter container's Security Context runAsUser\n  ##\n  securityContext:\n    enabled: false\n    runAsUser: 1001\n  ## Prometheus exporter service parameters\n  ##\n  service:\n    ## @param metrics.service.port NGINX Prometheus exporter service port\n    ##\n    port: 9113\n    ## @param metrics.service.annotations [object] Annotations for the Prometheus exporter service\n    ##\n    annotations:\n      prometheus.io/scrape: \"true\"\n      prometheus.io/port: \"{{ .Values.metrics.service.port }}\"\n  ## NGINX Prometheus exporter resource requests and limits\n  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n  ## We usually recommend not to specify default resources and to leave this as a conscious\n  ## choice for the user. This also increases chances charts run on environments with little\n  ## resources, such as Minikube. If you do want to specify resources, uncomment the following\n  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  ## @param metrics.resources.limits The resources limits for the NGINX Prometheus exporter container\n  ## @param metrics.resources.requests The requested resources for the NGINX Prometheus exporter container\n  ##\n  resources:\n    ## Example:\n    ## limits:\n    ##    cpu: 100m\n    ##    memory: 128Mi\n    limits: {}\n    ## Examples:\n    ## requests:\n    ##    cpu: 100m\n    ##    memory: 128Mi\n    requests: {}\n  ## Prometheus Operator ServiceMonitor configuration\n  ##\n  serviceMonitor:\n    ## @param metrics.serviceMonitor.enabled Creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)\n    ##\n    enabled: false\n    ## @param metrics.serviceMonitor.namespace Namespace in which Prometheus is running\n    ##\n    namespace: \"\"\n    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n    ## e.g:\n    ## interval: 10s\n    ##\n    interval: \"\"\n    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n    ## e.g:\n    ## scrapeTimeout: 10s\n    ##\n    scrapeTimeout: \"\"\n    ## @param metrics.serviceMonitor.selector Prometheus instance selector labels\n    ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration\n    ##\n    ## selector:\n    ##   prometheus: my-prometheus\n    ##\n    selector: {}\n    ## @param metrics.serviceMonitor.additionalLabels Additional labels that can be used so PodMonitor will be discovered by Prometheus\n    ##\n    additionalLabels: {}\n    ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping\n    ##\n    relabelings: []\n    ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion\n    ##\n    metricRelabelings: []\n  ## Prometheus Operator PrometheusRule configuration\n  ##\n  prometheusRule:\n    ## @param metrics.prometheusRule.enabled if `true`, creates a Prometheus Operator PrometheusRule (also requires `metrics.enabled` to be `true` and `metrics.prometheusRule.rules`)\n    ##\n    enabled: false\n    ## @param metrics.prometheusRule.namespace Namespace for the PrometheusRule Resource (defaults to the Release Namespace)\n    ##\n    namespace: \"\"\n    ## @param metrics.prometheusRule.additionalLabels Additional labels that can be used so PrometheusRule will be discovered by Prometheus\n    ##\n    additionalLabels: {}\n    ## @param metrics.prometheusRule.rules Prometheus Rule definitions\n    ##   - alert: LowInstance\n    ##     expr: up{service=\"{{ template \"common.names.fullname\" . }}\"} < 1\n    ##     for: 1m\n    ##     labels:\n    ##       severity: critical\n    ##     annotations:\n    ##       description: Service {{ template \"common.names.fullname\" . }} Tomcat is down since 1m.\n    ##       summary: Tomcat instance is down.\n    ##\n    rules: []\n\n","id":"bitnami/nginx","name":"nginx","description":"NGINX Open Source is a web server that can be also used as a reverse proxy, load balancer, and HTTP cache. Recommended for high-demanding sites due to its ability to provide faster content.","version":"9.9.3","license":"","deprecated":false,"repository":{"url":"https://charts.bitnami.com/bitnami","name":"bitnami","kind":0,"official":false,"displayName":"Bitnami","repositoryId":"64117528-d525-41d6-862c-41a43207c431","organizationName":"bitnami","verifiedPublisher":true,"organizationDisplayName":"Bitnami"},"packageId":"bec45f52-fe90-46a1-b6eb-a3dcd9bb203f","displayName":"","normalizedName":"nginx","appVersion":"1.21.6","logoImageId":"681732c0-8168-4b95-8600-894449c02b79","logoImageUrl":"https://artifacthub.io/image/681732c0-8168-4b95-8600-894449c02b79","namespace":"default"}
